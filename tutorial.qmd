---
title: Tutorial
toc: true
toc-location: left
toc-expand: 3
---

# Create a new blog post

This document presents how to publish blog post in the [College blog](https://github.com/IPESE/college_blog).

Our blog articles are written in Quarto, a format similar to Markdown. This means you can easily format your posts using simple syntax.

One exciting feature of our blog platform is the ability to include R or Python code chunks directly in your posts. This allows you to showcase data analysis, visualizations, or any other code-related content seamlessly within your articles.

## Setup development environment

You can conveniently edit your posts directly on the [GitHub IDE](https://github.com/IPESE/college_blog/new/main/posts) where you'll need to sign in or sign up to github. Simply add a unique name to your file and the extension `.qmd` and start writing away.

(And bad news: ChatGPT is not the best tool to ask for markdown code to copy/paste. *But you can always use it to help you understand the syntax*)

With this setup, you can start writing your blog posts right away. There's no need to spend time [configuring software or tools](environment_installation.html).

Keep in mind that by using the Github IDE you won't be able to preview your posts before deployment. However, we will manage the deployment and error handling automatically.

For simple markdown (without python or R code for example) you can test it in some online tools like [Dillinger.io](https://dillinger.io/).

## Before writing

In the beginning of your document, you should add some settings for how your post will be displayed. 

You might change the title, author, date, categories and description that are self-explanatory. FYI, other options are `toc` that allows you to control how and if the table of contents is displayed or comments to choose the framework that will manage comments in your post.

This is a sample configuration that you can copy and adapt to start your post:

```{markdown, eval=F, echo=T}
---
title: Title of your blog
author: Your name
date: 2012-12-12
categories:
  - Your Category
description: Description of your post that will appear in the listing
comments:
  hypothesis: true
toc: true
toc-location: left
toc-expand: 3
image : ../resources/images/sample.jpeg
---
```
You can also change the image that appears on the listing. 

For that, replace "../resources/images/sample.png" by an url of a picture *(urls ending with .jpg or .png for example)*

## Write in Markdown

You can add titles by starting the line with \# like this:

```{markdown, eval=F, echo=T}       
# Main title
## Secondary title
### Tertiary title
```

You can then add multiple types of data like :

1.  Text

2.  [Link to a website](https://www.google.com)
    ```{markdown, eval=F, echo=T}
        [Link to a website](https://www.google.com)
    ```

4.  **Bold text**
    ```{markdown, eval=F, echo=T}
        **bold**
    ```

5.  *Italic text*
    ```{markdown, eval=F, echo=T}
        *italic*
    ```

6.  ***Bold and italic text***
    ```{markdown, eval=F, echo=T}
        ***bold italic***
    ```

7.  Unordered list *managed with `-` and tabs *:

    ```{markdown, eval=F, echo=T}
        -   Main point
            -   secondary point
    ```

    -   Main point
        -   secondary point

8.  Ordered list *managed with `1.`, `a.` or `i.` and tabs *:

    ```{markdown, eval=F, echo=T}
        1.  Main point
            i.  secondary point
            i.  secondary point
        1. Second point
            a.  secondary point
            a.  secondary point
    ```

    1.  Main point
        i.  secondary point
        i.  secondary point
    1. Second point
        a.  secondary point
        a.  secondary point

9.  Tables are also possible:

    ```{markdown, eval=F, echo=T}
    | Aligned to the left | Centered col | Align to right |
    |:--------------------|:------------:|---------------:|
    | Content             |   Content    |        Content |
    | Content             |   Content    |        Content |
    ```

    | Aligned to the left | Centered col | Align to right |
    |:--------------------|:------------:|---------------:|
    | Content             |   Content    |        Content |
    | Content             |   Content    |        Content |

## What about code chunks?

You can also run or display code chunks like this:

```{r, echo=T, eval=F}
    ```{r}
    #| echo: false
    #| output: false
    if(!require('reticulate'))
        install.packages("reticulate")
    ```
```
In this example, we are executing code that will install a new package in R. 

Options available for customizing output include:

| Option      | Description                                                                                                                                                                                 |
|:-----------------|:-----------------------------------------------------|
| **eval**    | Evaluate the code chunk (if false, just echos the code into the output).                                                                                                                    |
| **echo**    | Include the source code in output                                                                                                                                                           |
| **output**  | Include the results of executing the code in the output (true, false, or asis to indicate that the output is raw markdown and should not have any of Quartoâ€™s standard enclosing markdown). |
| **warning** | Include warnings in the output.                                                                                                                                                             |
| **error**   | Include errors in the output (note that this implies that errors executing code will not halt processing of the document).                                                                  |
| **include** | Catch all for preventing any output (code or results) from being included (e.g. include: false suppresses all output from the code block).                                                  |

You can see a more complete example on how to use r and python code [here](https://github.com/IPESE/college_blog/blob/main/posts/test.qmd)

## Deploy the changes

1. Click on "Commit changes"
2. You can then change the message or leave the default message
3. Leave the option "Commit directly to the main branch"
4. Click on "Commit changes"
5. We have put in place a process that ignores posts where an error is encountered. In the github menu you can click on "Actions" to check the status of the deployment created by your post.
6. Our IT-service will go through any post with an error, fix it and explain what was done to correct it in a section at the bottom of the post.

# Edit a post

1. To edit your post, go to the projects' posts [github page](https://github.com/IPESE/college_blog/tree/main/posts) and click on the post you want to edit.
2. Click on the pencil icon on the top right of the code section.
3. This window should now look familiar. Edit and deploy as described previously!
